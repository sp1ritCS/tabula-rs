(function() {var implementors = {};
implementors["anyhow"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>","synthetic":true,"types":["anyhow::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"anyhow/struct.Chain.html\" title=\"struct anyhow::Chain\">Chain</a>&lt;'a&gt;","synthetic":true,"types":["anyhow::Chain"]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Chain.html\" title=\"struct bytes::buf::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::chain::Chain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.IntoIter.html\" title=\"struct bytes::buf::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::iter::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Limit.html\" title=\"struct bytes::buf::Limit\">Limit</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::limit::Limit"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Reader.html\" title=\"struct bytes::buf::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::reader::Reader"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Take.html\" title=\"struct bytes::buf::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::take::Take"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/buf/struct.UninitSlice.html\" title=\"struct bytes::buf::UninitSlice\">UninitSlice</a>","synthetic":true,"types":["bytes::buf::uninit_slice::UninitSlice"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Writer.html\" title=\"struct bytes::buf::Writer\">Writer</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::writer::Writer"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>","synthetic":true,"types":["bytes::bytes::Bytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>","synthetic":true,"types":["bytes::bytes_mut::BytesMut"]}];
implementors["cesu8"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"cesu8/struct.Cesu8DecodingError.html\" title=\"struct cesu8::Cesu8DecodingError\">Cesu8DecodingError</a>","synthetic":true,"types":["cesu8::Cesu8DecodingError"]}];
implementors["combine"] = [{"text":"impl&lt;T, R&gt; Freeze for <a class=\"enum\" href=\"combine/stream/easy/enum.Info.html\" title=\"enum combine::stream::easy::Info\">Info</a>&lt;T, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::easy::Info"]},{"text":"impl&lt;T, R&gt; Freeze for <a class=\"enum\" href=\"combine/stream/easy/enum.Error.html\" title=\"enum combine::stream::easy::Error\">Error</a>&lt;T, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::easy::Error"]},{"text":"impl&lt;T, R, P&gt; Freeze for <a class=\"struct\" href=\"combine/stream/easy/struct.Errors.html\" title=\"struct combine::stream::easy::Errors\">Errors</a>&lt;T, R, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::easy::Errors"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"combine/stream/easy/struct.Stream.html\" title=\"struct combine::stream::easy::Stream\">Stream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::easy::Stream"]},{"text":"impl&lt;T, R, F&gt; Freeze for <a class=\"enum\" href=\"combine/error/enum.Info.html\" title=\"enum combine::error::Info\">Info</a>&lt;T, R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::error::Info"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"combine/error/struct.Token.html\" title=\"struct combine::error::Token\">Token</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::error::Token"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"combine/error/struct.Range.html\" title=\"struct combine::error::Range\">Range</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::error::Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"combine/error/struct.Static.html\" title=\"struct combine::error::Static\">Static</a>","synthetic":true,"types":["combine::error::Static"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"combine/error/struct.Format.html\" title=\"struct combine::error::Format\">Format</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::error::Format"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"combine/error/enum.Commit.html\" title=\"enum combine::error::Commit\">Commit</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::error::Commit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"combine/error/enum.UnexpectedParse.html\" title=\"enum combine::error::UnexpectedParse\">UnexpectedParse</a>","synthetic":true,"types":["combine::error::UnexpectedParse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"combine/error/enum.StringStreamError.html\" title=\"enum combine::error::StringStreamError\">StringStreamError</a>","synthetic":true,"types":["combine::error::StringStreamError"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"combine/error/struct.Tracked.html\" title=\"struct combine::error::Tracked\">Tracked</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::error::Tracked"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"enum\" href=\"combine/enum.ParseResult.html\" title=\"enum combine::ParseResult\">ParseResult</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::error::ParseResult"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"combine/stream/buf_reader/struct.BufReader.html\" title=\"struct combine::stream::buf_reader::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::buf_reader::BufReader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"combine/stream/buf_reader/struct.Buffer.html\" title=\"struct combine::stream::buf_reader::Buffer\">Buffer</a>","synthetic":true,"types":["combine::stream::buf_reader::Buffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"combine/stream/buf_reader/struct.Bufferless.html\" title=\"struct combine::stream::buf_reader::Bufferless\">Bufferless</a>","synthetic":true,"types":["combine::stream::buf_reader::Bufferless"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/stream/buffered/struct.Stream.html\" title=\"struct combine::stream::buffered::Stream\">Stream</a>&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::buffered::Stream"]},{"text":"impl&lt;Input, X&gt; Freeze for <a class=\"struct\" href=\"combine/stream/position/struct.Stream.html\" title=\"struct combine::stream::position::Stream\">Stream</a>&lt;Input, X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::position::Stream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"combine/stream/position/struct.IndexPositioner.html\" title=\"struct combine::stream::position::IndexPositioner\">IndexPositioner</a>","synthetic":true,"types":["combine::stream::position::IndexPositioner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"combine/stream/position/struct.SourcePosition.html\" title=\"struct combine::stream::position::SourcePosition\">SourcePosition</a>","synthetic":true,"types":["combine::stream::position::SourcePosition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"combine/stream/read/enum.Error.html\" title=\"enum combine::stream::read::Error\">Error</a>","synthetic":true,"types":["combine::stream::read::Error"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"combine/stream/read/struct.Stream.html\" title=\"struct combine::stream::read::Stream\">Stream</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::read::Stream"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/stream/span/struct.Span.html\" title=\"struct combine::stream::span::Span\">Span</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::span::Span"]},{"text":"impl&lt;S, E&gt; Freeze for <a class=\"struct\" href=\"combine/stream/span/struct.Stream.html\" title=\"struct combine::stream::span::Stream\">Stream</a>&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::span::Stream"]},{"text":"impl&lt;S, U&gt; Freeze for <a class=\"struct\" href=\"combine/stream/state/struct.Stream.html\" title=\"struct combine::stream::state::Stream\">Stream</a>&lt;S, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::state::Stream"]},{"text":"impl&lt;E, P&gt; Freeze for <a class=\"enum\" href=\"combine/stream/decoder/enum.Error.html\" title=\"enum combine::stream::decoder::Error\">Error</a>&lt;E, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::decoder::Error"]},{"text":"impl&lt;S, P, C&gt; Freeze for <a class=\"struct\" href=\"combine/stream/decoder/struct.Decoder.html\" title=\"struct combine::stream::decoder::Decoder\">Decoder</a>&lt;S, P, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::decoder::Decoder"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"combine/stream/struct.PartialStream.html\" title=\"struct combine::stream::PartialStream\">PartialStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::PartialStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"combine/stream/struct.CompleteStream.html\" title=\"struct combine::stream::CompleteStream\">CompleteStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::CompleteStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"combine/stream/struct.MaybePartialStream.html\" title=\"struct combine::stream::MaybePartialStream\">MaybePartialStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::MaybePartialStream"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"combine/stream/struct.SliceStream.html\" title=\"struct combine::stream::SliceStream\">SliceStream</a>&lt;'a, T&gt;","synthetic":true,"types":["combine::stream::SliceStream"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/stream/struct.IteratorStream.html\" title=\"struct combine::stream::IteratorStream\">IteratorStream</a>&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::stream::IteratorStream"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"combine/stream/struct.PointerOffset.html\" title=\"struct combine::stream::PointerOffset\">PointerOffset</a>&lt;T&gt;","synthetic":true,"types":["combine::stream::PointerOffset"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/byte/struct.TakeUntilByte.html\" title=\"struct combine::parser::byte::TakeUntilByte\">TakeUntilByte</a>&lt;Input&gt;","synthetic":true,"types":["combine::parser::byte::TakeUntilByte"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/byte/struct.TakeUntilByte2.html\" title=\"struct combine::parser::byte::TakeUntilByte2\">TakeUntilByte2</a>&lt;Input&gt;","synthetic":true,"types":["combine::parser::byte::TakeUntilByte2"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/byte/struct.TakeUntilByte3.html\" title=\"struct combine::parser::byte::TakeUntilByte3\">TakeUntilByte3</a>&lt;Input&gt;","synthetic":true,"types":["combine::parser::byte::TakeUntilByte3"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/char/struct.Digit.html\" title=\"struct combine::parser::char::Digit\">Digit</a>&lt;Input&gt;","synthetic":true,"types":["combine::parser::char::Digit"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/choice/struct.Choice.html\" title=\"struct combine::parser::choice::Choice\">Choice</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::choice::Choice"]},{"text":"impl&lt;P1, P2&gt; Freeze for <a class=\"struct\" href=\"combine/parser/choice/struct.Or.html\" title=\"struct combine::parser::choice::Or\">Or</a>&lt;P1, P2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P2: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::choice::Or"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/choice/struct.Optional.html\" title=\"struct combine::parser::choice::Optional\">Optional</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::choice::Optional"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.NotFollowedBy.html\" title=\"struct combine::parser::combinator::NotFollowedBy\">NotFollowedBy</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::NotFollowedBy"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.Try.html\" title=\"struct combine::parser::combinator::Try\">Try</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::Try"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.LookAhead.html\" title=\"struct combine::parser::combinator::LookAhead\">LookAhead</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::LookAhead"]},{"text":"impl&lt;P, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.Map.html\" title=\"struct combine::parser::combinator::Map\">Map</a>&lt;P, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::Map"]},{"text":"impl&lt;P, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.MapInput.html\" title=\"struct combine::parser::combinator::MapInput\">MapInput</a>&lt;P, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::MapInput"]},{"text":"impl&lt;P, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.FlatMap.html\" title=\"struct combine::parser::combinator::FlatMap\">FlatMap</a>&lt;P, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::FlatMap"]},{"text":"impl&lt;P, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.AndThen.html\" title=\"struct combine::parser::combinator::AndThen\">AndThen</a>&lt;P, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::AndThen"]},{"text":"impl&lt;F, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.Recognize.html\" title=\"struct combine::parser::combinator::Recognize\">Recognize</a>&lt;F, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::Recognize"]},{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"combine/parser/combinator/enum.Either.html\" title=\"enum combine::parser::combinator::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::Either"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.NoPartial.html\" title=\"struct combine::parser::combinator::NoPartial\">NoPartial</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::NoPartial"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.Ignore.html\" title=\"struct combine::parser::combinator::Ignore\">Ignore</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::Ignore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.AnyPartialState.html\" title=\"struct combine::parser::combinator::AnyPartialState\">AnyPartialState</a>","synthetic":true,"types":["combine::parser::combinator::AnyPartialState"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.AnyPartialStateParser.html\" title=\"struct combine::parser::combinator::AnyPartialStateParser\">AnyPartialStateParser</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::AnyPartialStateParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.AnySendPartialState.html\" title=\"struct combine::parser::combinator::AnySendPartialState\">AnySendPartialState</a>","synthetic":true,"types":["combine::parser::combinator::AnySendPartialState"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.AnySendPartialStateParser.html\" title=\"struct combine::parser::combinator::AnySendPartialStateParser\">AnySendPartialStateParser</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::AnySendPartialStateParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.AnySendSyncPartialState.html\" title=\"struct combine::parser::combinator::AnySendSyncPartialState\">AnySendSyncPartialState</a>","synthetic":true,"types":["combine::parser::combinator::AnySendSyncPartialState"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.AnySendSyncPartialStateParser.html\" title=\"struct combine::parser::combinator::AnySendSyncPartialStateParser\">AnySendSyncPartialStateParser</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::AnySendSyncPartialStateParser"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.Lazy.html\" title=\"struct combine::parser::combinator::Lazy\">Lazy</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::Lazy"]},{"text":"impl&lt;P, R&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.Factory.html\" title=\"struct combine::parser::combinator::Factory\">Factory</a>&lt;P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::Factory"]},{"text":"impl&lt;Input, O, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.FromStr.html\" title=\"struct combine::parser::combinator::FromStr\">FromStr</a>&lt;Input, O, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::FromStr"]},{"text":"impl&lt;F, Input, O, S&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.Opaque.html\" title=\"struct combine::parser::combinator::Opaque\">Opaque</a>&lt;F, Input, O, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::Opaque"]},{"text":"impl&lt;InputInner, P, C&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.InputConverter.html\" title=\"struct combine::parser::combinator::InputConverter\">InputConverter</a>&lt;InputInner, P, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::InputConverter"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/combinator/struct.Spanned.html\" title=\"struct combine::parser::combinator::Spanned\">Spanned</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::combinator::Spanned"]},{"text":"impl&lt;I, T, E&gt; Freeze for <a class=\"struct\" href=\"combine/parser/error/struct.Unexpected.html\" title=\"struct combine::parser::error::Unexpected\">Unexpected</a>&lt;I, T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::error::Unexpected"]},{"text":"impl&lt;P, S&gt; Freeze for <a class=\"struct\" href=\"combine/parser/error/struct.Message.html\" title=\"struct combine::parser::error::Message\">Message</a>&lt;P, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::error::Message"]},{"text":"impl&lt;P, S&gt; Freeze for <a class=\"struct\" href=\"combine/parser/error/struct.Expected.html\" title=\"struct combine::parser::error::Expected\">Expected</a>&lt;P, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::error::Expected"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/error/struct.Silent.html\" title=\"struct combine::parser::error::Silent\">Silent</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::error::Silent"]},{"text":"impl&lt;Input, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/function/struct.FnParser.html\" title=\"struct combine::parser::function::FnParser\">FnParser</a>&lt;Input, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::function::FnParser"]},{"text":"impl&lt;E, Input, T&gt; Freeze for <a class=\"struct\" href=\"combine/parser/function/struct.EnvParser.html\" title=\"struct combine::parser::function::EnvParser\">EnvParser</a>&lt;E, Input, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::function::EnvParser"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/range/struct.Range.html\" title=\"struct combine::parser::range::Range\">Range</a>&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"type\" href=\"combine/trait.StreamOnce.html#associatedtype.Range\" title=\"type combine::StreamOnce::Range\">Range</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::range::Range"]},{"text":"impl&lt;Input, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/range/struct.Recognize.html\" title=\"struct combine::parser::range::Recognize\">Recognize</a>&lt;Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::range::Recognize"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/range/struct.RecognizeWithValue.html\" title=\"struct combine::parser::range::RecognizeWithValue\">RecognizeWithValue</a>&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::range::RecognizeWithValue"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/range/struct.Take.html\" title=\"struct combine::parser::range::Take\">Take</a>&lt;Input&gt;","synthetic":true,"types":["combine::parser::range::Take"]},{"text":"impl&lt;Input, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/range/struct.TakeWhile.html\" title=\"struct combine::parser::range::TakeWhile\">TakeWhile</a>&lt;Input, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::range::TakeWhile"]},{"text":"impl&lt;Input, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/range/struct.TakeWhile1.html\" title=\"struct combine::parser::range::TakeWhile1\">TakeWhile1</a>&lt;Input, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::range::TakeWhile1"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/range/struct.TakeUntilRange.html\" title=\"struct combine::parser::range::TakeUntilRange\">TakeUntilRange</a>&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"type\" href=\"combine/trait.StreamOnce.html#associatedtype.Range\" title=\"type combine::StreamOnce::Range\">Range</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::range::TakeUntilRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"combine/parser/range/enum.TakeRange.html\" title=\"enum combine::parser::range::TakeRange\">TakeRange</a>","synthetic":true,"types":["combine::parser::range::TakeRange"]},{"text":"impl&lt;F, Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/range/struct.TakeFn.html\" title=\"struct combine::parser::range::TakeFn\">TakeFn</a>&lt;F, Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::range::TakeFn"]},{"text":"impl&lt;F, Input, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.Count.html\" title=\"struct combine::parser::repeat::Count\">Count</a>&lt;F, Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::Count"]},{"text":"impl&lt;Input, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SkipCount.html\" title=\"struct combine::parser::repeat::SkipCount\">SkipCount</a>&lt;Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SkipCount"]},{"text":"impl&lt;F, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.CountMinMax.html\" title=\"struct combine::parser::repeat::CountMinMax\">CountMinMax</a>&lt;F, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::CountMinMax"]},{"text":"impl&lt;Input, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SkipCountMinMax.html\" title=\"struct combine::parser::repeat::SkipCountMinMax\">SkipCountMinMax</a>&lt;Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SkipCountMinMax"]},{"text":"impl&lt;'a, Input, P, S, M&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.Iter.html\" title=\"struct combine::parser::repeat::Iter\">Iter</a>&lt;'a, Input, P, S, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"type\" href=\"combine/trait.StreamOnce.html#associatedtype.Error\" title=\"type combine::StreamOnce::Error\">Error</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::Iter"]},{"text":"impl&lt;F, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.Many.html\" title=\"struct combine::parser::repeat::Many\">Many</a>&lt;F, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::Many"]},{"text":"impl&lt;F, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.Many1.html\" title=\"struct combine::parser::repeat::Many1\">Many1</a>&lt;F, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::Many1"]},{"text":"impl&lt;Input, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SkipMany.html\" title=\"struct combine::parser::repeat::SkipMany\">SkipMany</a>&lt;Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SkipMany"]},{"text":"impl&lt;Input, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SkipMany1.html\" title=\"struct combine::parser::repeat::SkipMany1\">SkipMany1</a>&lt;Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SkipMany1"]},{"text":"impl&lt;F, P, S&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SepBy.html\" title=\"struct combine::parser::repeat::SepBy\">SepBy</a>&lt;F, P, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SepBy"]},{"text":"impl&lt;F, P, S&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SepBy1.html\" title=\"struct combine::parser::repeat::SepBy1\">SepBy1</a>&lt;F, P, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SepBy1"]},{"text":"impl&lt;F, P, S&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SepEndBy.html\" title=\"struct combine::parser::repeat::SepEndBy\">SepEndBy</a>&lt;F, P, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SepEndBy"]},{"text":"impl&lt;F, P, S&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SepEndBy1.html\" title=\"struct combine::parser::repeat::SepEndBy1\">SepEndBy1</a>&lt;F, P, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SepEndBy1"]},{"text":"impl&lt;P, Op&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.Chainl1.html\" title=\"struct combine::parser::repeat::Chainl1\">Chainl1</a>&lt;P, Op&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Op: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::Chainl1"]},{"text":"impl&lt;P, Op&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.Chainr1.html\" title=\"struct combine::parser::repeat::Chainr1\">Chainr1</a>&lt;P, Op&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Op: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::Chainr1"]},{"text":"impl&lt;F, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.TakeUntil.html\" title=\"struct combine::parser::repeat::TakeUntil\">TakeUntil</a>&lt;F, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::TakeUntil"]},{"text":"impl&lt;Input, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SkipUntil.html\" title=\"struct combine::parser::repeat::SkipUntil\">SkipUntil</a>&lt;Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SkipUntil"]},{"text":"impl&lt;F, P, E&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.RepeatUntil.html\" title=\"struct combine::parser::repeat::RepeatUntil\">RepeatUntil</a>&lt;F, P, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::RepeatUntil"]},{"text":"impl&lt;Input, P, E&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.SkipRepeatUntil.html\" title=\"struct combine::parser::repeat::SkipRepeatUntil\">SkipRepeatUntil</a>&lt;Input, P, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::SkipRepeatUntil"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.EscapedState.html\" title=\"struct combine::parser::repeat::EscapedState\">EscapedState</a>&lt;T, U&gt;","synthetic":true,"types":["combine::parser::repeat::EscapedState"]},{"text":"impl&lt;P, Q, I&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.Escaped.html\" title=\"struct combine::parser::repeat::Escaped\">Escaped</a>&lt;P, Q, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::Escaped"]},{"text":"impl&lt;F, I, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/repeat/struct.Iterate.html\" title=\"struct combine::parser::repeat::Iterate\">Iterate</a>&lt;F, I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::repeat::Iterate"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState1.html\" title=\"struct combine::parser::sequence::PartialState1\">PartialState1</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState1"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState2.html\" title=\"struct combine::parser::sequence::PartialState2\">PartialState2</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState2"]},{"text":"impl&lt;A, B, C&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState3.html\" title=\"struct combine::parser::sequence::PartialState3\">PartialState3</a>&lt;A, B, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState3"]},{"text":"impl&lt;A, B, C, D&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState4.html\" title=\"struct combine::parser::sequence::PartialState4\">PartialState4</a>&lt;A, B, C, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState4"]},{"text":"impl&lt;A, B, C, D, E&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState5.html\" title=\"struct combine::parser::sequence::PartialState5\">PartialState5</a>&lt;A, B, C, D, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState5"]},{"text":"impl&lt;A, B, C, D, E, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState6.html\" title=\"struct combine::parser::sequence::PartialState6\">PartialState6</a>&lt;A, B, C, D, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState6"]},{"text":"impl&lt;A, B, C, D, E, F, G&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState7.html\" title=\"struct combine::parser::sequence::PartialState7\">PartialState7</a>&lt;A, B, C, D, E, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState7"]},{"text":"impl&lt;A, B, C, D, E, F, G, H&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState8.html\" title=\"struct combine::parser::sequence::PartialState8\">PartialState8</a>&lt;A, B, C, D, E, F, G, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState8"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState9.html\" title=\"struct combine::parser::sequence::PartialState9\">PartialState9</a>&lt;A, B, C, D, E, F, G, H, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState9"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState10.html\" title=\"struct combine::parser::sequence::PartialState10\">PartialState10</a>&lt;A, B, C, D, E, F, G, H, I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState10"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState11.html\" title=\"struct combine::parser::sequence::PartialState11\">PartialState11</a>&lt;A, B, C, D, E, F, G, H, I, J, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState11"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState12.html\" title=\"struct combine::parser::sequence::PartialState12\">PartialState12</a>&lt;A, B, C, D, E, F, G, H, I, J, K, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState12"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState13.html\" title=\"struct combine::parser::sequence::PartialState13\">PartialState13</a>&lt;A, B, C, D, E, F, G, H, I, J, K, L, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState13"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState14.html\" title=\"struct combine::parser::sequence::PartialState14\">PartialState14</a>&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState14"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState15.html\" title=\"struct combine::parser::sequence::PartialState15\">PartialState15</a>&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState15"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState16.html\" title=\"struct combine::parser::sequence::PartialState16\">PartialState16</a>&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState16"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState17.html\" title=\"struct combine::parser::sequence::PartialState17\">PartialState17</a>&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState17"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState18.html\" title=\"struct combine::parser::sequence::PartialState18\">PartialState18</a>&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState18"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S, T&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState19.html\" title=\"struct combine::parser::sequence::PartialState19\">PartialState19</a>&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState19"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S, T, U&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.PartialState20.html\" title=\"struct combine::parser::sequence::PartialState20\">PartialState20</a>&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S, T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Q: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::PartialState20"]},{"text":"impl&lt;P1, P2&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.With.html\" title=\"struct combine::parser::sequence::With\">With</a>&lt;P1, P2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P2: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::With"]},{"text":"impl&lt;P1, P2&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.Skip.html\" title=\"struct combine::parser::sequence::Skip\">Skip</a>&lt;P1, P2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P2: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::Skip"]},{"text":"impl&lt;Input, L, R, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.Between.html\" title=\"struct combine::parser::sequence::Between\">Between</a>&lt;Input, L, R, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::Between"]},{"text":"impl&lt;P, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.Then.html\" title=\"struct combine::parser::sequence::Then\">Then</a>&lt;P, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::Then"]},{"text":"impl&lt;P, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.ThenPartial.html\" title=\"struct combine::parser::sequence::ThenPartial\">ThenPartial</a>&lt;P, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::ThenPartial"]},{"text":"impl&lt;P, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/sequence/struct.ThenRef.html\" title=\"struct combine::parser::sequence::ThenRef\">ThenRef</a>&lt;P, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::sequence::ThenRef"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.Any.html\" title=\"struct combine::parser::token::Any\">Any</a>&lt;Input&gt;","synthetic":true,"types":["combine::parser::token::Any"]},{"text":"impl&lt;Input, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.Satisfy.html\" title=\"struct combine::parser::token::Satisfy\">Satisfy</a>&lt;Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::token::Satisfy"]},{"text":"impl&lt;Input, P&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.SatisfyMap.html\" title=\"struct combine::parser::token::SatisfyMap\">SatisfyMap</a>&lt;Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::token::SatisfyMap"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.Token.html\" title=\"struct combine::parser::token::Token\">Token</a>&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"type\" href=\"combine/trait.StreamOnce.html#associatedtype.Token\" title=\"type combine::StreamOnce::Token\">Token</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::token::Token"]},{"text":"impl&lt;C, E, T, Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.Tokens.html\" title=\"struct combine::parser::token::Tokens\">Tokens</a>&lt;C, E, T, Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::token::Tokens"]},{"text":"impl&lt;C, T, Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.TokensCmp.html\" title=\"struct combine::parser::token::TokensCmp\">TokensCmp</a>&lt;C, T, Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::token::TokensCmp"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.Position.html\" title=\"struct combine::parser::token::Position\">Position</a>&lt;Input&gt;","synthetic":true,"types":["combine::parser::token::Position"]},{"text":"impl&lt;T, Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.OneOf.html\" title=\"struct combine::parser::token::OneOf\">OneOf</a>&lt;T, Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::token::OneOf"]},{"text":"impl&lt;T, Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.NoneOf.html\" title=\"struct combine::parser::token::NoneOf\">NoneOf</a>&lt;T, Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::token::NoneOf"]},{"text":"impl&lt;Input, T&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.Value.html\" title=\"struct combine::parser::token::Value\">Value</a>&lt;Input, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::token::Value"]},{"text":"impl&lt;Input, F&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.Produce.html\" title=\"struct combine::parser::token::Produce\">Produce</a>&lt;Input, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["combine::parser::token::Produce"]},{"text":"impl&lt;Input&gt; Freeze for <a class=\"struct\" href=\"combine/parser/token/struct.Eof.html\" title=\"struct combine::parser::token::Eof\">Eof</a>&lt;Input&gt;","synthetic":true,"types":["combine::parser::token::Eof"]}];
implementors["jni"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"jni/enum.JNIVersion.html\" title=\"enum jni::JNIVersion\">JNIVersion</a>","synthetic":true,"types":["jni::wrapper::version::JNIVersion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jni/errors/enum.Error.html\" title=\"enum jni::errors::Error\">Error</a>","synthetic":true,"types":["jni::wrapper::errors::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jni/errors/enum.JniError.html\" title=\"enum jni::errors::JniError\">JniError</a>","synthetic":true,"types":["jni::wrapper::errors::JniError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/errors/struct.Exception.html\" title=\"struct jni::errors::Exception\">Exception</a>","synthetic":true,"types":["jni::wrapper::errors::Exception"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jni/signature/enum.Primitive.html\" title=\"enum jni::signature::Primitive\">Primitive</a>","synthetic":true,"types":["jni::wrapper::signature::Primitive"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jni/signature/enum.JavaType.html\" title=\"enum jni::signature::JavaType\">JavaType</a>","synthetic":true,"types":["jni::wrapper::signature::JavaType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/signature/struct.TypeSignature.html\" title=\"struct jni::signature::TypeSignature\">TypeSignature</a>","synthetic":true,"types":["jni::wrapper::signature::TypeSignature"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"jni/objects/enum.JValue.html\" title=\"enum jni::objects::JValue\">JValue</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jvalue::JValue"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JMethodID.html\" title=\"struct jni::objects::JMethodID\">JMethodID</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jmethodid::JMethodID"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JStaticMethodID.html\" title=\"struct jni::objects::JStaticMethodID\">JStaticMethodID</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jstaticmethodid::JStaticMethodID"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JFieldID.html\" title=\"struct jni::objects::JFieldID\">JFieldID</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jfieldid::JFieldID"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JStaticFieldID.html\" title=\"struct jni::objects::JStaticFieldID\">JStaticFieldID</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jstaticfieldid::JStaticFieldID"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JObject.html\" title=\"struct jni::objects::JObject\">JObject</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jobject::JObject"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JThrowable.html\" title=\"struct jni::objects::JThrowable\">JThrowable</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jthrowable::JThrowable"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JClass.html\" title=\"struct jni::objects::JClass\">JClass</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jclass::JClass"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JString.html\" title=\"struct jni::objects::JString\">JString</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jstring::JString"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JMap.html\" title=\"struct jni::objects::JMap\">JMap</a>&lt;'a, 'b&gt;","synthetic":true,"types":["jni::wrapper::objects::jmap::JMap"]},{"text":"impl&lt;'a, 'b, 'c&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JMapIter.html\" title=\"struct jni::objects::JMapIter\">JMapIter</a>&lt;'a, 'b, 'c&gt;","synthetic":true,"types":["jni::wrapper::objects::jmap::JMapIter"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JList.html\" title=\"struct jni::objects::JList\">JList</a>&lt;'a, 'b&gt;","synthetic":true,"types":["jni::wrapper::objects::jlist::JList"]},{"text":"impl&lt;'a, 'b, 'c&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JListIter.html\" title=\"struct jni::objects::JListIter\">JListIter</a>&lt;'a, 'b, 'c&gt;","synthetic":true,"types":["jni::wrapper::objects::jlist::JListIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.JByteBuffer.html\" title=\"struct jni::objects::JByteBuffer\">JByteBuffer</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::objects::jbytebuffer::JByteBuffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/objects/struct.GlobalRef.html\" title=\"struct jni::objects::GlobalRef\">GlobalRef</a>","synthetic":true,"types":["jni::wrapper::objects::global_ref::GlobalRef"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.AutoLocal.html\" title=\"struct jni::objects::AutoLocal\">AutoLocal</a>&lt;'a, 'b&gt;","synthetic":true,"types":["jni::wrapper::objects::auto_local::AutoLocal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jni/objects/enum.ReleaseMode.html\" title=\"enum jni::objects::ReleaseMode\">ReleaseMode</a>","synthetic":true,"types":["jni::wrapper::objects::release_mode::ReleaseMode"]},{"text":"impl&lt;'a, 'b, T&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.AutoArray.html\" title=\"struct jni::objects::AutoArray\">AutoArray</a>&lt;'a, 'b, T&gt;","synthetic":true,"types":["jni::wrapper::objects::auto_array::AutoArray"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"jni/objects/struct.AutoPrimitiveArray.html\" title=\"struct jni::objects::AutoPrimitiveArray\">AutoPrimitiveArray</a>&lt;'a, 'b&gt;","synthetic":true,"types":["jni::wrapper::objects::auto_primitive_array::AutoPrimitiveArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/strings/struct.JNIString.html\" title=\"struct jni::strings::JNIString\">JNIString</a>","synthetic":true,"types":["jni::wrapper::strings::ffi_str::JNIString"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/strings/struct.JNIStr.html\" title=\"struct jni::strings::JNIStr\">JNIStr</a>","synthetic":true,"types":["jni::wrapper::strings::ffi_str::JNIStr"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"jni/strings/struct.JavaStr.html\" title=\"struct jni::strings::JavaStr\">JavaStr</a>&lt;'a, 'b&gt;","synthetic":true,"types":["jni::wrapper::strings::java_str::JavaStr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/struct.JNIEnv.html\" title=\"struct jni::JNIEnv\">JNIEnv</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::jnienv::JNIEnv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/struct.NativeMethod.html\" title=\"struct jni::NativeMethod\">NativeMethod</a>","synthetic":true,"types":["jni::wrapper::jnienv::NativeMethod"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/struct.MonitorGuard.html\" title=\"struct jni::MonitorGuard\">MonitorGuard</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::jnienv::MonitorGuard"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jni/enum.JvmError.html\" title=\"enum jni::JvmError\">JvmError</a>","synthetic":true,"types":["jni::wrapper::java_vm::init_args::JvmError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/struct.InitArgsBuilder.html\" title=\"struct jni::InitArgsBuilder\">InitArgsBuilder</a>","synthetic":true,"types":["jni::wrapper::java_vm::init_args::InitArgsBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/struct.InitArgs.html\" title=\"struct jni::InitArgs\">InitArgs</a>","synthetic":true,"types":["jni::wrapper::java_vm::init_args::InitArgs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/struct.JavaVM.html\" title=\"struct jni::JavaVM\">JavaVM</a>","synthetic":true,"types":["jni::wrapper::java_vm::vm::JavaVM"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"jni/struct.AttachGuard.html\" title=\"struct jni::AttachGuard\">AttachGuard</a>&lt;'a&gt;","synthetic":true,"types":["jni::wrapper::java_vm::vm::AttachGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni/struct.Executor.html\" title=\"struct jni::Executor\">Executor</a>","synthetic":true,"types":["jni::wrapper::executor::Executor"]}];
implementors["jni_sys"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"jni_sys/enum._jobject.html\" title=\"enum jni_sys::_jobject\">_jobject</a>","synthetic":true,"types":["jni_sys::_jobject"]},{"text":"impl Freeze for <a class=\"union\" href=\"jni_sys/union.jvalue.html\" title=\"union jni_sys::jvalue\">jvalue</a>","synthetic":true,"types":["jni_sys::jvalue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jni_sys/enum._jfieldID.html\" title=\"enum jni_sys::_jfieldID\">_jfieldID</a>","synthetic":true,"types":["jni_sys::_jfieldID"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jni_sys/enum._jmethodID.html\" title=\"enum jni_sys::_jmethodID\">_jmethodID</a>","synthetic":true,"types":["jni_sys::_jmethodID"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jni_sys/enum.jobjectRefType.html\" title=\"enum jni_sys::jobjectRefType\">jobjectRefType</a>","synthetic":true,"types":["jni_sys::jobjectRefType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni_sys/struct.JNINativeMethod.html\" title=\"struct jni_sys::JNINativeMethod\">JNINativeMethod</a>","synthetic":true,"types":["jni_sys::JNINativeMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni_sys/struct.JNINativeInterface_.html\" title=\"struct jni_sys::JNINativeInterface_\">JNINativeInterface_</a>","synthetic":true,"types":["jni_sys::JNINativeInterface_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni_sys/struct.JNIEnv_.html\" title=\"struct jni_sys::JNIEnv_\">JNIEnv_</a>","synthetic":true,"types":["jni_sys::JNIEnv_"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni_sys/struct.JavaVMOption.html\" title=\"struct jni_sys::JavaVMOption\">JavaVMOption</a>","synthetic":true,"types":["jni_sys::JavaVMOption"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni_sys/struct.JavaVMInitArgs.html\" title=\"struct jni_sys::JavaVMInitArgs\">JavaVMInitArgs</a>","synthetic":true,"types":["jni_sys::JavaVMInitArgs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni_sys/struct.JavaVMAttachArgs.html\" title=\"struct jni_sys::JavaVMAttachArgs\">JavaVMAttachArgs</a>","synthetic":true,"types":["jni_sys::JavaVMAttachArgs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jni_sys/struct.JNIInvokeInterface_.html\" title=\"struct jni_sys::JNIInvokeInterface_\">JNIInvokeInterface_</a>","synthetic":true,"types":["jni_sys::JNIInvokeInterface_"]}];
implementors["libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::align::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock64.html\" title=\"struct libc::flock64\">flock64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stack_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat64.html\" title=\"struct libc::stat64\">stat64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs64.html\" title=\"struct libc::statfs64\">statfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs64.html\" title=\"struct libc::statvfs64\">statvfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statvfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpxreg.html\" title=\"struct libc::_libc_fpxreg\">_libc_fpxreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_xmmreg.html\" title=\"struct libc::_libc_xmmreg\">_libc_xmmreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpstate.html\" title=\"struct libc::_libc_fpstate\">_libc_fpstate</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpstate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_regs_struct.html\" title=\"struct libc::user_regs_struct\">user_regs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user.html\" title=\"struct libc::user\">user</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mcontext_t.html\" title=\"struct libc::mcontext_t\">mcontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::mcontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ipc_perm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::shmid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios2.html\" title=\"struct libc::termios2\">termios2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::termios2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreqn.html\" title=\"struct libc::ip_mreqn\">ip_mreqn</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ip_mreqn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_fpregs_struct.html\" title=\"struct libc::user_fpregs_struct\">user_fpregs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucontext_t.html\" title=\"struct libc::ucontext_t\">ucontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ucontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigset_t.html\" title=\"struct libc::sigset_t\">sigset_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sigset_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sysinfo.html\" title=\"struct libc::sysinfo\">sysinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sysinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msqid_ds.html\" title=\"struct libc::msqid_ds\">msqid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::msqid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.semid_ds.html\" title=\"struct libc::semid_ds\">semid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::semid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sem_t.html\" title=\"struct libc::sem_t\">sem_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::align::sem_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx.html\" title=\"struct libc::statx\">statx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx_timestamp.html\" title=\"struct libc::statx_timestamp\">statx_timestamp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx_timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::aiocb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__exit_status.html\" title=\"struct libc::__exit_status\">__exit_status</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__exit_status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__timeval.html\" title=\"struct libc::__timeval\">__timeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob64_t.html\" title=\"struct libc::glob64_t\">glob64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::glob64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::termios"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo.html\" title=\"struct libc::mallinfo\">mallinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo2.html\" title=\"struct libc::mallinfo2\">mallinfo2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_pktinfo.html\" title=\"struct libc::nl_pktinfo\">nl_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_req.html\" title=\"struct libc::nl_mmap_req\">nl_mmap_req</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_req"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_hdr.html\" title=\"struct libc::nl_mmap_hdr\">nl_mmap_hdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_hdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rtentry.html\" title=\"struct libc::rtentry\">rtentry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::rtentry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timex.html\" title=\"struct libc::timex\">timex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::timex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ntptimeval.html\" title=\"struct libc::ntptimeval\">ntptimeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ntptimeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regex_t.html\" title=\"struct libc::regex_t\">regex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::regex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Chdr.html\" title=\"struct libc::Elf64_Chdr\">Elf64_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::Elf64_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Chdr.html\" title=\"struct libc::Elf32_Chdr\">Elf32_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::Elf32_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seminfo.html\" title=\"struct libc::seminfo\">seminfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::seminfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::utmpx"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos64_t.html\" title=\"enum libc::fpos64_t\">fpos64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fpos64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit64.html\" title=\"struct libc::rlimit64\">rlimit64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::rlimit64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::glob_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.spwd.html\" title=\"struct libc::spwd\">spwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::spwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dqblk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.signalfd_siginfo.html\" title=\"struct libc::signalfd_siginfo\">signalfd_siginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::signalfd_siginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerspec.html\" title=\"struct libc::itimerspec\">itimerspec</a>","synthetic":true,"types":["libc::unix::linux_like::linux::itimerspec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.packet_mreq.html\" title=\"struct libc::packet_mreq\">packet_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::linux::packet_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cpu_set_t.html\" title=\"struct libc::cpu_set_t\">cpu_set_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::cpu_set_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::if_nameindex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msginfo.html\" title=\"struct libc::msginfo\">msginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::msginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sembuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_event.html\" title=\"struct libc::input_event\">input_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_id.html\" title=\"struct libc::input_id\">input_id</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_id"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_absinfo.html\" title=\"struct libc::input_absinfo\">input_absinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_absinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_keymap_entry.html\" title=\"struct libc::input_keymap_entry\">input_keymap_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_keymap_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_mask.html\" title=\"struct libc::input_mask\">input_mask</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_mask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_replay.html\" title=\"struct libc::ff_replay\">ff_replay</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_replay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_trigger.html\" title=\"struct libc::ff_trigger\">ff_trigger</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_trigger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_envelope.html\" title=\"struct libc::ff_envelope\">ff_envelope</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_envelope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_constant_effect.html\" title=\"struct libc::ff_constant_effect\">ff_constant_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_constant_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_ramp_effect.html\" title=\"struct libc::ff_ramp_effect\">ff_ramp_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_ramp_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_condition_effect.html\" title=\"struct libc::ff_condition_effect\">ff_condition_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_condition_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_periodic_effect.html\" title=\"struct libc::ff_periodic_effect\">ff_periodic_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_periodic_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_rumble_effect.html\" title=\"struct libc::ff_rumble_effect\">ff_rumble_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_rumble_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_effect.html\" title=\"struct libc::ff_effect\">ff_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_ff_upload.html\" title=\"struct libc::uinput_ff_upload\">uinput_ff_upload</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_ff_upload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_ff_erase.html\" title=\"struct libc::uinput_ff_erase\">uinput_ff_erase</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_ff_erase"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_abs_setup.html\" title=\"struct libc::uinput_abs_setup\">uinput_abs_setup</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_abs_setup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dl_phdr_info.html\" title=\"struct libc::dl_phdr_info\">dl_phdr_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dl_phdr_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Ehdr.html\" title=\"struct libc::Elf32_Ehdr\">Elf32_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Ehdr.html\" title=\"struct libc::Elf64_Ehdr\">Elf64_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Sym.html\" title=\"struct libc::Elf32_Sym\">Elf32_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Sym.html\" title=\"struct libc::Elf64_Sym\">Elf64_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Phdr.html\" title=\"struct libc::Elf32_Phdr\">Elf32_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Phdr.html\" title=\"struct libc::Elf64_Phdr\">Elf64_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Shdr.html\" title=\"struct libc::Elf32_Shdr\">Elf32_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Shdr.html\" title=\"struct libc::Elf64_Shdr\">Elf64_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucred.html\" title=\"struct libc::ucred\">ucred</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mntent.html\" title=\"struct libc::mntent\">mntent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mntent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawn_file_actions_t.html\" title=\"struct libc::posix_spawn_file_actions_t\">posix_spawn_file_actions_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawn_file_actions_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawnattr_t.html\" title=\"struct libc::posix_spawnattr_t\">posix_spawnattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawnattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.genlmsghdr.html\" title=\"struct libc::genlmsghdr\">genlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::genlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::in6_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpd_request.html\" title=\"struct libc::arpd_request\">arpd_request</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arpd_request"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.inotify_event.html\" title=\"struct libc::inotify_event\">inotify_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::inotify_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_response.html\" title=\"struct libc::fanotify_response\">fanotify_response</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_vm.html\" title=\"struct libc::sockaddr_vm\">sockaddr_vm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_vm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regmatch_t.html\" title=\"struct libc::regmatch_t\">regmatch_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::regmatch_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_extended_err.html\" title=\"struct libc::sock_extended_err\">sock_extended_err</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_extended_err"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_sockaddr_can_tp.html\" title=\"struct libc::__c_anonymous_sockaddr_can_tp\">__c_anonymous_sockaddr_can_tp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_tp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_sockaddr_can_j1939.html\" title=\"struct libc::__c_anonymous_sockaddr_can_j1939\">__c_anonymous_sockaddr_can_j1939</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_j1939"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.can_filter.html\" title=\"struct libc::can_filter\">can_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::can_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_filter.html\" title=\"struct libc::sock_filter\">sock_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_fprog.html\" title=\"struct libc::sock_fprog\">sock_fprog</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_fprog"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seccomp_data.html\" title=\"struct libc::seccomp_data\">seccomp_data</a>","synthetic":true,"types":["libc::unix::linux_like::linux::seccomp_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsghdr.html\" title=\"struct libc::nlmsghdr\">nlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsgerr.html\" title=\"struct libc::nlmsgerr\">nlmsgerr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlmsgerr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlattr.html\" title=\"struct libc::nlattr\">nlattr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlattr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_nl.html\" title=\"struct libc::sockaddr_nl\">sockaddr_nl</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_nl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent64.html\" title=\"struct libc::dirent64\">dirent64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_alg.html\" title=\"struct libc::sockaddr_alg\">sockaddr_alg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_alg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_setup.html\" title=\"struct libc::uinput_setup\">uinput_setup</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_setup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_user_dev.html\" title=\"struct libc::uinput_user_dev\">uinput_user_dev</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_user_dev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.af_alg_iv.html\" title=\"struct libc::af_alg_iv\">af_alg_iv</a>","synthetic":true,"types":["libc::unix::linux_like::linux::af_alg_iv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mq_attr.html\" title=\"struct libc::mq_attr\">mq_attr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mq_attr"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.__c_anonymous_sockaddr_can_can_addr.html\" title=\"union libc::__c_anonymous_sockaddr_can_can_addr\">__c_anonymous_sockaddr_can_can_addr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_can_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_can.html\" title=\"struct libc::sockaddr_can\">sockaddr_can</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_can"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutexattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlockattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_condattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_event_metadata.html\" title=\"struct libc::fanotify_event_metadata\">fanotify_event_metadata</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_event_metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlock_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.can_frame.html\" title=\"struct libc::can_frame\">can_frame</a>","synthetic":true,"types":["libc::unix::linux_like::linux::can_frame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.canfd_frame.html\" title=\"struct libc::canfd_frame\">canfd_frame</a>","synthetic":true,"types":["libc::unix::linux_like::linux::canfd_frame"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>","synthetic":true,"types":["libc::unix::linux_like::timezone"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>","synthetic":true,"types":["libc::unix::linux_like::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq_source.html\" title=\"struct libc::ip_mreq_source\">ip_mreq_source</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq_source"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["libc::unix::linux_like::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ll.html\" title=\"struct libc::sockaddr_ll\">sockaddr_ll</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_ll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>","synthetic":true,"types":["libc::unix::linux_like::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>","synthetic":true,"types":["libc::unix::linux_like::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sched_param.html\" title=\"struct libc::sched_param\">sched_param</a>","synthetic":true,"types":["libc::unix::linux_like::sched_param"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>","synthetic":true,"types":["libc::unix::linux_like::Dl_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>","synthetic":true,"types":["libc::unix::linux_like::lconv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::in_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>","synthetic":true,"types":["libc::unix::linux_like::ifaddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_rtmsg.html\" title=\"struct libc::in6_rtmsg\">in6_rtmsg</a>","synthetic":true,"types":["libc::unix::linux_like::in6_rtmsg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq.html\" title=\"struct libc::arpreq\">arpreq</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq_old.html\" title=\"struct libc::arpreq_old\">arpreq_old</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq_old"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>","synthetic":true,"types":["libc::unix::linux_like::arphdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mmsghdr.html\" title=\"struct libc::mmsghdr\">mmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::mmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.epoll_event.html\" title=\"struct libc::epoll_event\">epoll_event</a>","synthetic":true,"types":["libc::unix::linux_like::epoll_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>","synthetic":true,"types":["libc::unix::linux_like::utsname"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>","synthetic":true,"types":["libc::unix::linux_like::sigevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["libc::unix::align::in6_addr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>","synthetic":true,"types":["libc::unix::DIR"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>","synthetic":true,"types":["libc::unix::group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>","synthetic":true,"types":["libc::unix::utimbuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>","synthetic":true,"types":["libc::unix::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>","synthetic":true,"types":["libc::unix::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>","synthetic":true,"types":["libc::unix::rlimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>","synthetic":true,"types":["libc::unix::rusage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["libc::unix::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>","synthetic":true,"types":["libc::unix::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>","synthetic":true,"types":["libc::unix::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>","synthetic":true,"types":["libc::unix::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>","synthetic":true,"types":["libc::unix::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>","synthetic":true,"types":["libc::unix::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>","synthetic":true,"types":["libc::unix::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>","synthetic":true,"types":["libc::unix::itimerval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>","synthetic":true,"types":["libc::unix::tms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>","synthetic":true,"types":["libc::unix::servent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>","synthetic":true,"types":["libc::unix::protoent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>","synthetic":true,"types":["libc::unix::FILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>","synthetic":true,"types":["libc::unix::fpos_t"]}];
implementors["log"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr.html\" title=\"struct memchr::Memchr\">Memchr</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr2.html\" title=\"struct memchr::Memchr2\">Memchr2</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr2"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr3.html\" title=\"struct memchr::Memchr3\">Memchr3</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr3"]},{"text":"impl Freeze for <a class=\"enum\" href=\"memchr/memmem/enum.Prefilter.html\" title=\"enum memchr::memmem::Prefilter\">Prefilter</a>","synthetic":true,"types":["memchr::memmem::prefilter::Prefilter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindIter.html\" title=\"struct memchr::memmem::FindIter\">FindIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindIter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindRevIter.html\" title=\"struct memchr::memmem::FindRevIter\">FindRevIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindRevIter"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.Finder.html\" title=\"struct memchr::memmem::Finder\">Finder</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::Finder"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderRev.html\" title=\"struct memchr::memmem::FinderRev\">FinderRev</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::FinderRev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderBuilder.html\" title=\"struct memchr::memmem::FinderBuilder\">FinderBuilder</a>","synthetic":true,"types":["memchr::memmem::FinderBuilder"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Await.html\" title=\"struct syn::token::Await\">Await</a>","synthetic":true,"types":["syn::token::Await"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAwait.html\" title=\"struct syn::ExprAwait\">ExprAwait</a>","synthetic":true,"types":["syn::expr::ExprAwait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variadic.html\" title=\"struct syn::Variadic\">Variadic</a>","synthetic":true,"types":["syn::ty::Variadic"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Error.html\" title=\"struct syn::parse::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Nothing.html\" title=\"struct syn::parse::Nothing\">Nothing</a>","synthetic":true,"types":["syn::parse::Nothing"]}];
implementors["tabula"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tabula/struct.Rectangle.html\" title=\"struct tabula::Rectangle\">Rectangle</a>","synthetic":true,"types":["tabula::objects::Rectangle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tabula/enum.OutputFormat.html\" title=\"enum tabula::OutputFormat\">OutputFormat</a>","synthetic":true,"types":["tabula::objects::OutputFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tabula/enum.ExtractionMethod.html\" title=\"enum tabula::ExtractionMethod\">ExtractionMethod</a>","synthetic":true,"types":["tabula::objects::ExtractionMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tabula/struct.TabulaVM.html\" title=\"struct tabula::TabulaVM\">TabulaVM</a>","synthetic":true,"types":["tabula::TabulaVM"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"tabula/struct.TabulaEnv.html\" title=\"struct tabula::TabulaEnv\">TabulaEnv</a>&lt;'env&gt;","synthetic":true,"types":["tabula::TabulaEnv"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"tabula/struct.Tabula.html\" title=\"struct tabula::Tabula\">Tabula</a>&lt;'env&gt;","synthetic":true,"types":["tabula::Tabula"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()